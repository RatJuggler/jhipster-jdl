application {
  config {
    applicationType monolith
    baseName dinosaurs
    packageName com.rj.dinosaurs
    buildTool maven
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider ehcache
    enableHibernateCache true
    skipClient false
    clientFramework angularX
    clientPackageManager npm
    useSass true
    skipServer false
    enableSwaggerCodegen false
    skipUserManagement false
    messageBroker false
    searchEngine false
    serviceDiscoveryType false
    websocket false
    nativeLanguage en
    enableTranslation false
    languages [en]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [protractor, cucumber, gatling]
  }
  entities *
}

DEFAULT_MIN_LENGTH = 1
DEFAULT_MAX_LENGTH = 64
DEFAULT_MIN = 0
DEFAULT_MAX = 999

@dto(mapstruct)
@service(serviceImpl)
@paginate(pagination)
entity Era {
    name String required maxlength(DEFAULT_MAX_LENGTH)
    fromMa Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
    toMa Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
}

@dto(mapstruct)
@service(serviceImpl)
@paginate(pagination)
entity Clade {
	description String required maxlength(DEFAULT_MAX_LENGTH)
}

@dto(mapstruct)
@service(serviceImpl)
@paginate(infinite-scroll)
    entity Dinosaur {
    name String required maxlength(DEFAULT_MAX_LENGTH)
    weight Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
    length Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
    diet Diet
    insertDt Instant required
    modifiedDt Instant required
}

enum Diet {
    HERBIVORE, CARNIVORE, OMNIVORE
}

relationship ManyToOne {
	Dinosaur{era(name)} to Era,
	Dinosaur{clade(description)} to Clade
}
