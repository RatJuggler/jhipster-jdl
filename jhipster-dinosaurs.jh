// See https://www.jhipster.tech/jdl/ for JDL specification.
// See https://www.jhipster.tech/using-dtos/ for notes on DTO's.

// Note: Not using a service layer or DTO's.

DEFAULT_MIN_LENGTH = 1
DEFAULT_MAX_LENGTH = 64
DEFAULT_MIN = 0
DEFAULT_MAX = 999

application {
  config {
    applicationType monolith
    baseName dinosaurs
    packageName com.rj.dinosaurs
    buildTool maven
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider ehcache
    enableHibernateCache true
    clientFramework angularX
    useSass false
	enableSwaggerCodegen true
    skipUserManagement false
    enableTranslation false
    languages [en]
    testFrameworks [protractor, cucumber, gatling]
  }
  entities *
}

enum Period {
	TRIASSIC, JURASSIC, CRETACEOUS
}

enum EpochRange {
	EARLY_LOWER, MIDDLE, LATE_UPPER
}

@paginate(pagination)
entity Epoch {
	period Period required,
    epoch EpochRange required,
    fromMa Integer required min(DEFAULT_MIN) max(DEFAULT_MAX),
    toMa Integer required min(DEFAULT_MIN) max(DEFAULT_MAX)
}

@paginate(pagination)
entity Age {
    name String required maxlength(DEFAULT_MAX_LENGTH),
    fromMa Integer required min(DEFAULT_MIN) max(DEFAULT_MAX),
    toMa Integer required min(DEFAULT_MIN) max(DEFAULT_MAX)
}

enum Type {
	ANKYLOSAURIA, CERATOPSIA, ORNITHOPODA, PACHYCEPHALOSAURIA, SAUROPODOMORPHA, SAUROPODA, STEGOSAURIA, THEROPODA
}

@paginate(pagination)
entity Clade {
	type Type,
    pronunciation String maxlength(DEFAULT_MAX_LENGTH),
    meaning String maxlength(DEFAULT_MAX_LENGTH),
	description String maxlength(DEFAULT_MAX_LENGTH)
}

enum Diet {
    HERBIVORE, CARNIVORE, OMNIVORE
}

@paginate(infinite-scroll)
entity Dinosaur {
    name String required maxlength(DEFAULT_MAX_LENGTH),
    pronunciation String maxlength(DEFAULT_MAX_LENGTH),
    meaning String maxlength(DEFAULT_MAX_LENGTH),
    weight Integer min(DEFAULT_MIN) max(DEFAULT_MAX),
    length Integer min(DEFAULT_MIN) max(DEFAULT_MAX),
    height Integer min(DEFAULT_MIN) max(DEFAULT_MAX),
    diet Diet,
    enteredDt Instant required,
    modifiedDt Instant required
}

relationship OneToOne {
	Dinosaur{synonymFor(name)} to Dinosaur
}

relationship OneToMany {
	Epoch to Age{epoch required},
    Epoch to Dinosaur{epochItLived required},
    Age to Dinosaur{ageItLived(name)},
    Clade to Dinosaur{clade(type)}
	User to Dinosaur{enteredBy}
	User to Dinosaur{modifiedBy}
}
