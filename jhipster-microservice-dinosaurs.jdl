application {
  config {
    baseName dinosaursCatalogue
    applicationType gateway
    packageName com.rj.dinosaurs.catalogue
    buildTool maven
    serverPort 8080
    serviceDiscoveryType consul
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider ehcache
    enableHibernateCache true
    skipClient false
    clientFramework angularX
    clientPackageManager npm
    useSass true
    skipServer false
    enableSwaggerCodegen false
    skipUserManagement false
    messageBroker false
    searchEngine false
    websocket false
    nativeLanguage en
    enableTranslation true
    languages [en, es, fr]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [protractor, cucumber, gatling]
  }
  entities Clade, Epoch, Dinosaur
}

application {
  config {
    baseName dinosaursSighting
    applicationType gateway
    packageName com.rj.dinosaurs.sighting
    buildTool maven
    serverPort 8081
    serviceDiscoveryType consul
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider ehcache
    enableHibernateCache false
    skipClient false
    clientFramework angularX
    clientPackageManager npm
    useSass true
    skipServer false
    enableSwaggerCodegen false
    skipUserManagement true
    messageBroker kafka
    searchEngine elasticsearch
    websocket false
    nativeLanguage en
    enableTranslation false
    languages [en]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [protractor, cucumber, gatling]
  }
  entities Sighting
}

application {
  config {
    baseName dinosaursGame
    applicationType gateway
    packageName com.rj.dinosaurs.game
    buildTool maven
    serverPort 8082
    serviceDiscoveryType consul
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider ehcache
    enableHibernateCache false
    skipClient false
    clientFramework angularX
    clientPackageManager npm
    useSass true
    skipServer false
    enableSwaggerCodegen false
    skipUserManagement true
    messageBroker false
    searchEngine false
    websocket false
    nativeLanguage en
    enableTranslation false
    languages [en]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [protractor, cucumber, gatling]
  }
  entities Player, Level, HighScore
}

application {
  config {
    baseName catalogue
    applicationType microservice
    packageName com.rj.dinosaurs.catalogue
    buildTool maven
    serverPort 8090
    serviceDiscoveryType consul
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider hazelcast
    enableHibernateCache true
    skipClient true
    skipServer false
    enableSwaggerCodegen false
    skipUserManagement true
    messageBroker false
    searchEngine false
    websocket false
    nativeLanguage en
    enableTranslation false
    languages [en]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [cucumber, gatling]
  }
  entities Clade, Epoch, Dinosaur
}

application {
  config {
    baseName sighting
    applicationType microservice
    packageName com.rj.dinosaurs.sighting
    buildTool maven
    serverPort 8091
    serviceDiscoveryType consul
    authenticationType jwt
    databaseType mongodb
    devDatabaseType mongodb
    prodDatabaseType mongodb
    cacheProvider no
    enableHibernateCache false
    skipClient true
    skipServer false
    enableSwaggerCodegen false
    skipUserManagement true
    messageBroker kafka
    searchEngine false
    websocket false
    nativeLanguage en
    enableTranslation false
    languages [en]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [cucumber, gatling]
  }
  entities Sighting
}

application {
  config {
    baseName game
    applicationType microservice
    packageName com.rj.dinosaurs.game
    buildTool maven
    serverPort 8092
    serviceDiscoveryType consul
    authenticationType jwt
    databaseType sql
    prodDatabaseType mysql
    devDatabaseType h2Disk
    cacheProvider hazelcast
    enableHibernateCache true
    skipClient true
    skipServer false
    enableSwaggerCodegen true
    skipUserManagement true
    messageBroker false
    searchEngine false
    websocket false
    nativeLanguage en
    enableTranslation false
    languages [en]
    jhiPrefix jhi
    dtoSuffix DTO
    testFrameworks [cucumber, gatling]
  }
  entities Player, Level, HighScore
}

DEFAULT_MIN_LENGTH = 1
DEFAULT_MAX_LENGTH = 64
DEFAULT_MIN = 0
DEFAULT_MAX = 999

/* Entities for Dinosaurs Gateway */

enum Period {
	TRIASSIC, JURASSIC, CRETACEOUS
}

enum EpochRange {
	EARLY_LOWER, MIDDLE, LATE_UPPER
}

@dto(mapstruct)
@service(serviceClass)
@paginate(pagination)
entity Epoch {
	period Period required
  epoch EpochRange required
  fromMa Integer required min(DEFAULT_MIN) max(DEFAULT_MAX)
  toMa Integer required min(DEFAULT_MIN) max(DEFAULT_MAX)
}

@dto(mapstruct)
@service(serviceClass)
@paginate(pagination)
entity Clade {
	name String unique maxlength(DEFAULT_MAX_LENGTH)
  pronunciation String maxlength(DEFAULT_MAX_LENGTH)
  meaning String maxlength(DEFAULT_MAX_LENGTH)
	description String maxlength(DEFAULT_MAX_LENGTH)
}

enum Diet {
  HERBIVORE, CARNIVORE, OMNIVORE
}

@dto(mapstruct)
@search(elasticsearch)
@service(serviceClass)
@paginate(pagination)
entity Dinosaur {
  name String unique required maxlength(DEFAULT_MAX_LENGTH)
  pronunciation String maxlength(DEFAULT_MAX_LENGTH)
  meaning String maxlength(DEFAULT_MAX_LENGTH)
  weight Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
  length Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
  height Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
  diet Diet
  createdDt Instant required
  modifiedDt Instant
}

relationship OneToMany {
  Epoch to Dinosaur{epochItLived required}
  Clade to Dinosaur{clade(name) required}
	User to Dinosaur{createdBy required}
	User to Dinosaur{modifiedBy}
}

/* Entities for Sightings microservice */

enum Heading {
  STATIONARY, NORTH, NORTH-EAST, EAST, SOUTH-EAST, SOUTH, SOUTH-WEST, WEST, NORTH-WEST
}

@search(elasticsearch)
@paginate(infinite-scroll)
entity Sighting {
  dinosaur Long required min(DEFAULT_MIN)
  byUser Long required min(DEFAULT_MIN)
  whenDt Instant required
  lat Float required
  lng Float required
  number Integer min(DEFAULT_MIN) max(DEFAULT_MAX)
  heading Heading
  notes String maxlength(DEFAULT_MAX_LENGTH)
}

/* Entities for Game microservice */

entity Player {
  email String unique required minlength(5) maxlength(DEFAULT_MAX_LENGTH) pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
  name String unique required minlength(8) maxlength(DEFAULT_MAX_LENGTH)
  avatar ImageBlob
  createdDt Instant required
}

entity Level {
  name String required minlength(DEFAULT_MIN_LENGTH) maxlength(DEFAULT_MAX_LENGTH)
  order Integer required min(DEFAULT_MIN) max(DEFAULT_MAX)
  definition TextBlob required
  createdDt Instant required
}

entity HighScore {
  score Integer required
  achievedDt Instant required
}

relationship OneToOne {
  Player to HighScore{player required}
  Level to HighScore{level required}
}
